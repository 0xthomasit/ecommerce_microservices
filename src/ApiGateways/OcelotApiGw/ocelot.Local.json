{
    "GlobalConfiguration;": {
        "BaseUrl": "http://apigw.ocelot"
    },
    "Routes": [
        // Customer.API: http://localhost:6003/api/customers
        {
            "DownstreamPathTemplate": "/api/customers",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6003
                }
            ],
            "UpstreamPathTemplate": "/customers",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "SwaggerKey": "customer-service"
        },
        {
            "DownstreamPathTemplate": "/api/customers/{username}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6003
                }
            ],
            "UpstreamPathTemplate": "/customers/{username}",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "SwaggerKey": "customer-service"
        },
        {
            "DownstreamPathTemplate": "/api/customers",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6003
                }
            ],
            "UpstreamPathTemplate": "/customers",
            "UpstreamHttpMethod": [
                "POST"
            ],
            "SwaggerKey": "customer-service"
        },
        
        // Product.API: http://localhost:6002/api/products
        {
            "UpstreamPathTemplate": "/products",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "DownstreamPathTemplate": "/api/products",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6002
                }
            ],
            "RateLimitOptions": {
                "ClientWhiteList": [], // the clients in this array won't be affected by the rate limit
                "EnableRateLimiting": true,
                "Period": "10s", // 1s, 5p, 1h, 1d
                "PeriodTimespan": 2, // Retry after a certain number of seconds
                "Limit": 5 // the maximum numbers of request that a client can make in a defined period
            },
            "QoSOptions": {
                "ExceptionsAllowedBeforeBreaking": 2, // If a service doesn't respond for 2s => throw a timeout exception 
                "DurationOfBreak": 1000, // ms
                "TimeoutValue": 5000 // If a service throws a second exception, it won't be accessible for 5 seconds
            },
            "FileCacheOptions": {
                "TtlSeconds": 15 // Cache for 15 seconds
            },
            "SwaggerKey": "product-service"
        },
        {
            "UpstreamPathTemplate": "/products",
            "UpstreamHttpMethod": [
                "POST"
            ],
            "DownstreamPathTemplate": "/api/products",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6002
                }
            ],
            "RateLimitOptions": {
                "ClientWhiteList": [], // the clients in this array won't be affected by the rate limit
                "EnableRateLimiting": true,
                "Period": "2s", // 1s, 5p, 1h, 1d
                "PeriodTimespan": 1, // Retry after a certain number of seconds
                "Limit": 1 // the maximum numbers of request that a client can make in a defined period
            },
            "QoSOptions": {
                "ExceptionsAllowedBeforeBreaking": 2, // If a service doesn't respond for 2s => throw a timeout exception 
                "DurationOfBreak": 1000, // ms
                "TimeoutValue": 5000 // If a service throws a second exception, it won't be accessible for 5 seconds
            },
            "SwaggerKey": "product-service"
        },
        {
            "UpstreamPathTemplate": "/products/{id}",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "DownstreamPathTemplate": "/api/products/{id}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6002
                }
            ],
            "SwaggerKey": "product-service"
        },
        {
            "UpstreamPathTemplate": "/products/{id}",
            "UpstreamHttpMethod": [
                "PUT",
                "DELETE"
            ],
            "DownstreamPathTemplate": "/api/products/{id}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6002
                }
            ],
            "SwaggerKey": "product-service"
//            "AuthenticationOptions": {
//                "AuthenticationProviderKey": "Bearer",
//                "AllowedScopes": []
//            },
//            "RouteClaimsRequirement": {
//                "Role": "Admin"
//            }
        },
        {
            "UpstreamPathTemplate": "/products/get-product-by-no/{productNo}",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "DownstreamPathTemplate": "/api/products/get-product-by-no/{productNo}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6002
                }
            ],
            "SwaggerKey": "product-service"
        },

        // Basket.API: http://localhost:6002/api/baskets
        {
            "UpstreamPathTemplate": "/baskets/{username}",
            "UpstreamHttpMethod": [
                "GET",
                "DELETE"
            ],
            "DownstreamPathTemplate": "/api/baskets/{username}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6004
                }
            ],
            "SwaggerKey": "basket-service"
        },
        {
            "UpstreamPathTemplate": "/baskets",
            "UpstreamHttpMethod": [
                "POST"
            ],
            "DownstreamPathTemplate": "/api/baskets",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6004
                }
            ],
            "SwaggerKey": "basket-service"
        },
        {
            "UpstreamPathTemplate": "/baskets/checkout",
            "UpstreamHttpMethod": [
                "POST"
            ],
            "DownstreamPathTemplate": "/api/baskets/checkout",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6004
                }
            ],
            "SwaggerKey": "basket-service"
        },

        // Ordering.API: http://localhost:6002/api/order
        {
            "UpstreamPathTemplate": "/{version}/orders/{id}",
            "UpstreamHttpMethod": [
                "GET",
                "PUT",
                "DELETE"
            ],
            "DownstreamPathTemplate": "/api/{version}/orders/{id}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6005
                }
            ],
            "SwaggerKey": "ordering-service"
        },
        {
            "UpstreamPathTemplate": "/{version}/orders",
            "UpstreamHttpMethod": [
                "POST"
            ],
            "DownstreamPathTemplate": "/api/{version}/orders",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6005
                }
            ],
            "SwaggerKey": "ordering-service"
        },

        // Inventory.API: http://localhost:6002/api/inventory
        {
            "UpstreamPathTemplate": "/inventory/items/{itemNo}",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "DownstreamPathTemplate": "/api/inventory/items/{itemNo}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6006
                }
            ],
            "SwaggerKey": "inventory-service"
        },
        {
            "UpstreamPathTemplate": "/inventory/items/{itemNo}/paging",
            "UpstreamHttpMethod": [
                "GET"
            ],
            "DownstreamPathTemplate": "/api/inventory/items/{itemNo}/paging",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6006
                }
            ],
            "SwaggerKey": "inventory-service"
        },
        {
            "UpstreamPathTemplate": "/inventory/{id}",
            "UpstreamHttpMethod": [
                "GET",
                "DELETE"
            ],
            "DownstreamPathTemplate": "/api/inventory/{id}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6006
                }
            ],
            "SwaggerKey": "inventory-service"
        },
        {
            "UpstreamPathTemplate": "/inventory/purchase/{itemNo}",
            "UpstreamHttpMethod": [
                "POST"
            ],
            "DownstreamPathTemplate": "/api/inventory/purchase/{itemNo}",
            "DownstreamSchema": "http",
            "DownstreamHostAndPorts": [
                {
                    "Host": "host.docker.internal",
                    "Port": 6006
                }
            ],
            "SwaggerKey": "inventory-service"
        }
    ],
    "SwaggerEndPoints": [
        {
            "Key": "customer-service",
            "Config": [
                {
                    "Name": "Customer API",
                    "Version": "v1",
                    "Url": "http://customer.api/swagger/v1/swagger.json"
                }
            ]
        },
        {
            "Key": "product-service",
            "Config": [
                {
                    "Name": "Product API",
                    "Version": "v1",
                    "Url": "http://product.api/swagger/v1/swagger.json"
                }
            ]
        },
        {
            "Key": "basket-service",
            "Config": [
                {
                    "Name": "Basket API",
                    "Version": "v1",
                    "Url": "http://basket.api/swagger/v1/swagger.json"
                }
            ]
        },
        {
            "Key": "ordering-service",
            "Config": [
                {
                    "Name": "Ordering API",
                    "Version": "v1",
                    "Url": "http://ordering.api/swagger/v1/swagger.json"
                }
            ]
        },
        {
            "Key": "inventory-service",
            "Config": [
                {
                    "Name": "Inventory API",
                    "Version": "v1",
                    "Url": "http://inventory.product.api/swagger/v1/swagger.json"
                }
            ]
        }
    ]
}