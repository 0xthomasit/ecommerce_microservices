services:
  #Database section
  orderdb:
    image: mcr.microsoft.com/mssql/server:2022-latest

  productdb:
    image: bitnami/mysql:8.4.5

  customerdb:
    image: bitnami/postgresql:17.5.0

  basketdb:
    image: redis:8.0.1-alpine

  inventorydb:
    image: mongo:8.0.9

  hangfiredb:
    image: mongo:8.0.9

  #Infrastructure section
  rabbitmq:
    image: rabbitmq:4.1-alpine

  pgadmin:
    image: dpage/pgadmin4:9.3

  portainer:
    image: portainer/portainer-ce:2.30.1-alpine

  elasticsearch:
    image: bitnami/elasticsearch:8.18.0

  kibana:
    image: bitnami/kibana:8.18.0
  
  #microservices api section
  product.api:
    image: ${DOCKER_REGISTRY-}product-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Product.API/Dockerfile
  
  customer.api:
    image: ${DOCKER_REGISTRY-}customer-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Customer.API/Dockerfile

  basket.api:
    image: ${DOCKER_REGISTRY-}basket-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Basket.API/Dockerfile

  ordering.api:
    image: ${DOCKER_REGISTRY-}ordering-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
  
  inventory.product.api:
    image: ${DOCKER_REGISTRY-}inventory-product-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Inventory/Inventory.Product.API/Dockerfile
  
  inventory.grpc:
    image: ${DOCKER_REGISTRY-}inventory-grpc:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Inventory/Inventory.Grpc/Dockerfile
  
  apigw.ocelot:
    image: ${DOCKER_REGISTRY-}apigw-ocelot:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/OcelotApiGw/Dockerfile
  
  hangfire.api:
    image: ${DOCKER_REGISTRY-}hangfire-api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Hangfire.API/Dockerfile
      
  webstatus:
    image: ${DOCKER_REGISTRY-}webstatus:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: WebApps/WebHealthStatus/Dockerfile
  
#Network section
networks:
  default:
    name: aspnet_microservices
    driver: bridge

#Volume section
volumes:
  sqlserver_data:
    name: sqlserver_data
  mysql_data:
    name: mysql_data
  postgresql_data:
    name: postgresql_data
  redis_data:
    name: redis_data
  rabbitmq_data:
    name: rabbitmq_data
  portainer_data:
    name: portainer_data
  elasticsearch_data:
    name: elasticsearch_data
  jaeger_data:
    name: jaeger_data
  mongodb_data:
    name: mongodb_data
  hangfire_mongo_data:
    name: hangfire_mongo_data
  pgadmin_data:
    name: pgadmin_data